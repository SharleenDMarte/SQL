--Spotify data used for this project was downloaded from Kaggle
--I created a table in order to insert Spotify data into it
--I then performed analytics on the Spotify data using SQL 

--Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)

--Then I inserted the Spotify Data .csv into the table

--Next, I explored the data using the following SQL 

--#1. Which songs have popularity over 80?
SELECT artist_name, popularity
FROM BIT_DB.spotifydata
WHERE popularity > 80
GROUP BY artist_name
ORDER BY popularity DESC;

--#2. How many songs are by the same artist?
SELECT artist_name, COUNT(track_name) AS total_tracks
FROM bit_db.Spotifydata
GROUP BY artist_name
HAVING total_tracks>0
ORDER BY total_tracks DESC;

--#3. What is the avg popularity, danceability, and energy by artist and track? 
SELECT
artist_name
,track_name
,avg(popularity)
,avg(danceability)
,avg(energy)
FROM BIT_DB.spotifydata
GROUP BY artist_name, track_name;

--#4. Which artist on the chart has the longest song?
SELECT artist_name AS artist, 
track_name AS song, 
MAX(duration_ms) AS duration
FROM BIT_DB.Spotifydata
ORDER BY duration
LIMIT 3;

--#5. Who are the Top 10 artists are by popularity?
SELECT track_name, artist_name, popularity
FROM BIT_DB.spotifydata
ORDER BY popularity desc
LIMIT 10;
