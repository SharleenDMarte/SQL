--In this SQL, I'm quering a database containing multiple tables to quantify statistics about customers and order data. 

--#1. How many orders were placed in January? 
SELECT COUNT(orderid)
FROM BIT_DB.JanSales
WHERE length(orderid) = 6 
AND orderid <> 'Order ID';

--#2. How many of those orders were for an iPhone?
SELECT COUNT(orderid)
FROM BIT_DB.JanSales
WHERE Product='iPhone'
AND length(orderid) = 6 
AND orderid <> 'Order ID';

--3. Select the customer account numbers for all the orders that were placed in February.
SELECT DISTINCT acctnum
FROM BIT_DB.customers cust
INNER JOIN BIT_DB.FebSales Feb
ON cust.order_id=FEB.orderid
WHERE length(orderid) = 6 
AND orderid <> 'Order ID';

--#4. Which product was the cheapest one sold in January, and what was the price?
SELECT DISTINCT product, MIN(price) 
FROM BIT_DB.JanSales Jan 
GROUP BY product, price 
ORDER BY price ASC 
LIMIT 1;

--#5. What is the total revenue for each product sold in January? 
SELECT product, 
SUM(quantity)*price AS revenue
FROM BIT_DB.JanSales
GROUP BY product;

--#6. Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?
SELECT
SUM(Quantity), 
product, 
SUM(quantity)*price as revenue
FROM BIT_DB.FebSales 
WHERE location = '548 Lincoln St, Seattle, WA 98101'
GROUP BY product;

--#7. How many customers ordered more than 2 products at a time in February, and what was the average amount spent for those customers?
SELECT 
COUNT(DISTINCT bit_db.customers.acctnum),
AVG(quantity*price)
FROM bit_db.FebSales
LEFT JOIN bit_db.customers
ON bit_db.FebSales.orderid=bit_db.customers.order_id
WHERE bit_db.FebSales.quantity>2
AND order_id <> ' '
AND order_id <> 'order ID'
AND length(orderid) = 6
AND orderid <> 'order id';
